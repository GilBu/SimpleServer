#!/usr/bin/ruby

require_relative 'http/Response'
require_relative 'HtaccessChecker'

class ResponseFactory
    #  Call like a static method =  ResponseFactory.create(http_request, resource)
    def self.create(request, resource)
        # Build and return properly constructed repsonse.
        #resource.resolve
        
        # Check request format is valid. If not return a 400 response.
        p "Resource: #{resource.resolve}"
        p "MimeType: #{resource.mime_type}"
        # 
        # Use htaccesschecker to check if the resource is protected.
        # If it is send 403 forbidden response.
        htaccessChecker = HtaccessChecker.new(request.headers)
        p htaccessChecker.to_s
        # Build and send response.
#        p "Resource: #{resource.resolve}"
        Response.new(200, "Response generated by ResponseFactory.")
    end
end
